name: Coverage

on: workflow_call

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  RUSTC_WRAPPER: sccache
  SCCACHE_CACHE_SIZE: 2G

jobs:
  test:
    strategy:
      matrix:
        os: [linux]
        arch: [x86_64, aarch64]

    runs-on: ["self-hosted", "${{ matrix.os }}", "${{ matrix.arch }}"]

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      - name: Install sccache
        env:
          SCCACHE_VERSION: v0.3.0
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-${{ matrix.arch }}-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "https://github.com/mozilla/sccache/releases/download/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod +x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          sccache --stop-server || true
          sccache --start-server

      - name: Install toolchain
        run: |
          rustup update nightly
          rustup target add wasm32-unknown-unknown --toolchain nightly

          cargo install --locked --force cargo-binstall

          cargo binstall --no-confirm cargo-sweep

      - name: Install tarpaulin
        run: cargo binstall --no-confirm cargo-tarpaulin
        if: matrix.arch == 'x86_64' && matrix.os == 'linux'

      - name: Build Tests
        run: cargo test --no-run --locked
      - name: Run Test
        run: cargo test -- --nocapture --quiet
        if: matrix.arch != 'x86_64' || matrix.os != 'linux'
      - name: Generate coverage
        run: |
          cargo tarpaulin --forward --release --locked -t 120 -o Xml \
          --ignore-tests --workspace \
          --exclude parami-primitives parami-traits \
          parami-dana parami-para parami-dana-runtime parami-para-runtime \
          --exclude-files **/mock.rs **/weights.rs **/weights/* **/migrations.rs **/benchmarking.rs
        if: matrix.arch == 'x86_64' && matrix.os == 'linux'

      - name: Post-build
        run: |
          cargo sweep --time 30

      - name: Stop sccache
        run: sccache --stop-server || true
        if: always()

      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
        if: matrix.arch == 'x86_64' && matrix.os == 'linux'
